name: ShellCheck Modified Files

on:
  push:
    branches:
      - shellcheck-workflow
    paths:
      - '**/*.sh'

jobs:
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install ShellCheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Get changed files
        id: changed-files
        run: |
          files=$(git diff --name-only HEAD^ HEAD | grep '\.sh$' || echo "")
          echo "files=$files" >> $GITHUB_OUTPUT
        # $GITHUB_OUTPUT is used to set the "files" output for this step.

      - name: Run ShellCheck on changed files
        if: steps.changed-files.outputs.files != ''
        run: |
          echo "Checking files: ${{ steps.changed-files.outputs.files }}"
          shellcheck ${{ steps.changed-files.outputs.files }}

      - name: Comment on commit if errors found
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const files = '${{ steps.changed-files.outputs.files }}'.split(' ');
            let output = '';
            for (const file of files) {
              try {
                const result = require('child_process').execSync(`shellcheck ${file} 2>&1`).toString();
                if (result) output += `\n### ${file}:\n${result}`;
              } catch (error) {
                output += `\n### ${file}:\n${error.stdout}`; 
              }
            }
            if (output) {
              github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.name,
                commit_sha: context.sha,
                body: '⚠️ ShellCheck found issues:\n```\n' + output + '\n```'
              });
            }
